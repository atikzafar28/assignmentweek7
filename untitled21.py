# -*- coding: utf-8 -*-
"""Untitled21.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H6MLD2OuEZSNnoYPNfKr9-piGUffQv7E
"""

import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import plotly.express as px

# Generate synthetic data
def generate_data(n=200):
    np.random.seed(1)
    sizes = np.random.normal(1500, 400, n)
    prices = sizes * 100 + np.random.normal(0, 10000, n)
    return pd.DataFrame({'Size (sqft)': sizes, 'Price ($)': prices})

# Train linear regression model
def train_model(data):
    X = data[['Size (sqft)']]
    y = data['Price ($)']
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    model = LinearRegression()
    model.fit(X_train, y_train)
    return model

# Streamlit App
def main():
    st.set_page_config(page_title="House Price Estimator", layout="centered")
    st.title("üè° House Price Estimator")
    st.write("Enter the size of the house to estimate its price.")

    # Generate data and train model
    data = generate_data()
    model = train_model(data)

    # User input
    size_input = st.slider("Select house size (in sq ft)", min_value=500, max_value=4000, value=1500, step=50)

    # Predict price
    prediction = model.predict([[size_input]])[0]

    st.subheader("üí∞ Estimated Price")
    st.success(f"${prediction:,.2f}")

    # Plot data and prediction
    fig = px.scatter(data, x='Size (sqft)', y='Price ($)', title="Size vs Price")
    fig.add_scatter(x=[size_input], y=[prediction],
                    mode='markers',
                    marker=dict(size=12, color='red'),
                    name='Your Input')
    st.plotly_chart(fig)

# Run the app
if __name__ == '__main__':
    main()